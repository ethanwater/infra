name: API Endpoint Testing Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21

    - name: Set up MySQL
      uses: mysqljs/setup-mysql@v2
      with:
        mysql-version: '5.7'
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    - name: Execute SQL Commands
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -p"${MYSQL_ROOT_PASSWORD}" -e "
          CREATE DATABASE IF NOT EXISTS user_schema;
          USE user_schema;
          DROP TABLE IF EXISTS users;
          CREATE TABLE users (
            id        INT UNIQUE NOT NULL,
            alias     VARCHAR(128) UNIQUE,
            email     VARCHAR(128) UNIQUE,
            password  VARCHAR(128) NOT NULL,
            PRIMARY KEY (id)
          );
          INSERT INTO users (id, alias, email, password)
          VALUES (1, 'vivian-admin', 'vivian@vivian.com', '$2a$13$oCCafEIoJJZx/R31iGtOmuGULSIKKnHtytkpAlEYVMWBAuhkWx0Hu');
        "
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    - name: Build and Test
      run: |
        go build ./...

    - name: Run 2FA Test
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -e "SELECT 1"
        go run build/main.go &
        sleep 5
        generate_response=$(curl -s "http://127.0.0.1:8080/bella/2FA?action=generate" | tr -d '"')
        echo "Generate Response: $generate_response"
        if [[ "$generate_response" != *"cat"* ]]; then
          echo "Test passed: Generate2FA returned the expected input."
        else
          echo "Test failed: Generate2FA did not return the expected input."
          exit 1
        fi
        verify_response=$(curl -s "http://127.0.0.1:8080/bella/2FA?action=verify&key=$generate_response")
        echo "Verify Response: $verify_response"
        if [[ "$verify_response" == *"true"* ]]; then
          echo "Test passed: Verify2FA returned the expected input."
        else
          echo "Test failed: Verify2FA did not return the expected input."
          exit 1
        fi
        clear_2FA_cache=$(curl -s "http://127.0.0.1:8080/bella/2FA?action=expire")


    
    - name: Stop the server
      run: pkill -f "build/main.go" || true
